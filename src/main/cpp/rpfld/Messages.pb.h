// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: Messages.proto

#ifndef PROTOBUF_Messages_2eproto__INCLUDED
#define PROTOBUF_Messages_2eproto__INCLUDED

#include <string>

#include <google/protobuf/stubs/common.h>

#if GOOGLE_PROTOBUF_VERSION < 2005000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please update
#error your headers.
#endif
#if 2005000 < GOOGLE_PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/message.h>
#include <google/protobuf/repeated_field.h>
#include <google/protobuf/extension_set.h>
#include <google/protobuf/generated_enum_reflection.h>
#include <google/protobuf/unknown_field_set.h>
// @@protoc_insertion_point(includes)

namespace org {
namespace rpfl {
namespace transport {
namespace protobuf {

// Internal implementation detail -- do not call these.
void  protobuf_AddDesc_Messages_2eproto();
void protobuf_AssignDesc_Messages_2eproto();
void protobuf_ShutdownFile_Messages_2eproto();

class Request;
class Response;
class ResponseEntry;

enum VerificationStrength {
  notfound = 1,
  downloaded = 2,
  recompiled = 3
};
bool VerificationStrength_IsValid(int value);
const VerificationStrength VerificationStrength_MIN = notfound;
const VerificationStrength VerificationStrength_MAX = recompiled;
const int VerificationStrength_ARRAYSIZE = VerificationStrength_MAX + 1;

const ::google::protobuf::EnumDescriptor* VerificationStrength_descriptor();
inline const ::std::string& VerificationStrength_Name(VerificationStrength value) {
  return ::google::protobuf::internal::NameOfEnum(
    VerificationStrength_descriptor(), value);
}
inline bool VerificationStrength_Parse(
    const ::std::string& name, VerificationStrength* value) {
  return ::google::protobuf::internal::ParseNamedEnum<VerificationStrength>(
    VerificationStrength_descriptor(), name, value);
}
// ===================================================================

class Request : public ::google::protobuf::Message {
 public:
  Request();
  virtual ~Request();

  Request(const Request& from);

  inline Request& operator=(const Request& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const Request& default_instance();

  void Swap(Request* other);

  // implements Message ----------------------------------------------

  Request* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const Request& from);
  void MergeFrom(const Request& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated string resources = 1;
  inline int resources_size() const;
  inline void clear_resources();
  static const int kResourcesFieldNumber = 1;
  inline const ::std::string& resources(int index) const;
  inline ::std::string* mutable_resources(int index);
  inline void set_resources(int index, const ::std::string& value);
  inline void set_resources(int index, const char* value);
  inline void set_resources(int index, const char* value, size_t size);
  inline ::std::string* add_resources();
  inline void add_resources(const ::std::string& value);
  inline void add_resources(const char* value);
  inline void add_resources(const char* value, size_t size);
  inline const ::google::protobuf::RepeatedPtrField< ::std::string>& resources() const;
  inline ::google::protobuf::RepeatedPtrField< ::std::string>* mutable_resources();

  // @@protoc_insertion_point(class_scope:org.rpfl.transport.protobuf.Request)
 private:

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::RepeatedPtrField< ::std::string> resources_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];

  friend void  protobuf_AddDesc_Messages_2eproto();
  friend void protobuf_AssignDesc_Messages_2eproto();
  friend void protobuf_ShutdownFile_Messages_2eproto();

  void InitAsDefaultInstance();
  static Request* default_instance_;
};
// -------------------------------------------------------------------

class Response : public ::google::protobuf::Message {
 public:
  Response();
  virtual ~Response();

  Response(const Response& from);

  inline Response& operator=(const Response& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const Response& default_instance();

  void Swap(Response* other);

  // implements Message ----------------------------------------------

  Response* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const Response& from);
  void MergeFrom(const Response& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .org.rpfl.transport.protobuf.ResponseEntry entries = 1;
  inline int entries_size() const;
  inline void clear_entries();
  static const int kEntriesFieldNumber = 1;
  inline const ::org::rpfl::transport::protobuf::ResponseEntry& entries(int index) const;
  inline ::org::rpfl::transport::protobuf::ResponseEntry* mutable_entries(int index);
  inline ::org::rpfl::transport::protobuf::ResponseEntry* add_entries();
  inline const ::google::protobuf::RepeatedPtrField< ::org::rpfl::transport::protobuf::ResponseEntry >&
      entries() const;
  inline ::google::protobuf::RepeatedPtrField< ::org::rpfl::transport::protobuf::ResponseEntry >*
      mutable_entries();

  // @@protoc_insertion_point(class_scope:org.rpfl.transport.protobuf.Response)
 private:

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::RepeatedPtrField< ::org::rpfl::transport::protobuf::ResponseEntry > entries_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];

  friend void  protobuf_AddDesc_Messages_2eproto();
  friend void protobuf_AssignDesc_Messages_2eproto();
  friend void protobuf_ShutdownFile_Messages_2eproto();

  void InitAsDefaultInstance();
  static Response* default_instance_;
};
// -------------------------------------------------------------------

class ResponseEntry : public ::google::protobuf::Message {
 public:
  ResponseEntry();
  virtual ~ResponseEntry();

  ResponseEntry(const ResponseEntry& from);

  inline ResponseEntry& operator=(const ResponseEntry& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const ResponseEntry& default_instance();

  void Swap(ResponseEntry* other);

  // implements Message ----------------------------------------------

  ResponseEntry* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const ResponseEntry& from);
  void MergeFrom(const ResponseEntry& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required string url = 1;
  inline bool has_url() const;
  inline void clear_url();
  static const int kUrlFieldNumber = 1;
  inline const ::std::string& url() const;
  inline void set_url(const ::std::string& value);
  inline void set_url(const char* value);
  inline void set_url(const char* value, size_t size);
  inline ::std::string* mutable_url();
  inline ::std::string* release_url();
  inline void set_allocated_url(::std::string* url);

  // required int64 size = 2;
  inline bool has_size() const;
  inline void clear_size();
  static const int kSizeFieldNumber = 2;
  inline ::google::protobuf::int64 size() const;
  inline void set_size(::google::protobuf::int64 value);

  // required bytes hash = 3;
  inline bool has_hash() const;
  inline void clear_hash();
  static const int kHashFieldNumber = 3;
  inline const ::std::string& hash() const;
  inline void set_hash(const ::std::string& value);
  inline void set_hash(const char* value);
  inline void set_hash(const void* value, size_t size);
  inline ::std::string* mutable_hash();
  inline ::std::string* release_hash();
  inline void set_allocated_hash(::std::string* hash);

  // required .org.rpfl.transport.protobuf.VerificationStrength verificationStrength = 4;
  inline bool has_verificationstrength() const;
  inline void clear_verificationstrength();
  static const int kVerificationStrengthFieldNumber = 4;
  inline ::org::rpfl::transport::protobuf::VerificationStrength verificationstrength() const;
  inline void set_verificationstrength(::org::rpfl::transport::protobuf::VerificationStrength value);

  // @@protoc_insertion_point(class_scope:org.rpfl.transport.protobuf.ResponseEntry)
 private:
  inline void set_has_url();
  inline void clear_has_url();
  inline void set_has_size();
  inline void clear_has_size();
  inline void set_has_hash();
  inline void clear_has_hash();
  inline void set_has_verificationstrength();
  inline void clear_has_verificationstrength();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::std::string* url_;
  ::google::protobuf::int64 size_;
  ::std::string* hash_;
  int verificationstrength_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(4 + 31) / 32];

  friend void  protobuf_AddDesc_Messages_2eproto();
  friend void protobuf_AssignDesc_Messages_2eproto();
  friend void protobuf_ShutdownFile_Messages_2eproto();

  void InitAsDefaultInstance();
  static ResponseEntry* default_instance_;
};
// ===================================================================


// ===================================================================

// Request

// repeated string resources = 1;
inline int Request::resources_size() const {
  return resources_.size();
}
inline void Request::clear_resources() {
  resources_.Clear();
}
inline const ::std::string& Request::resources(int index) const {
  return resources_.Get(index);
}
inline ::std::string* Request::mutable_resources(int index) {
  return resources_.Mutable(index);
}
inline void Request::set_resources(int index, const ::std::string& value) {
  resources_.Mutable(index)->assign(value);
}
inline void Request::set_resources(int index, const char* value) {
  resources_.Mutable(index)->assign(value);
}
inline void Request::set_resources(int index, const char* value, size_t size) {
  resources_.Mutable(index)->assign(
    reinterpret_cast<const char*>(value), size);
}
inline ::std::string* Request::add_resources() {
  return resources_.Add();
}
inline void Request::add_resources(const ::std::string& value) {
  resources_.Add()->assign(value);
}
inline void Request::add_resources(const char* value) {
  resources_.Add()->assign(value);
}
inline void Request::add_resources(const char* value, size_t size) {
  resources_.Add()->assign(reinterpret_cast<const char*>(value), size);
}
inline const ::google::protobuf::RepeatedPtrField< ::std::string>&
Request::resources() const {
  return resources_;
}
inline ::google::protobuf::RepeatedPtrField< ::std::string>*
Request::mutable_resources() {
  return &resources_;
}

// -------------------------------------------------------------------

// Response

// repeated .org.rpfl.transport.protobuf.ResponseEntry entries = 1;
inline int Response::entries_size() const {
  return entries_.size();
}
inline void Response::clear_entries() {
  entries_.Clear();
}
inline const ::org::rpfl::transport::protobuf::ResponseEntry& Response::entries(int index) const {
  return entries_.Get(index);
}
inline ::org::rpfl::transport::protobuf::ResponseEntry* Response::mutable_entries(int index) {
  return entries_.Mutable(index);
}
inline ::org::rpfl::transport::protobuf::ResponseEntry* Response::add_entries() {
  return entries_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::org::rpfl::transport::protobuf::ResponseEntry >&
Response::entries() const {
  return entries_;
}
inline ::google::protobuf::RepeatedPtrField< ::org::rpfl::transport::protobuf::ResponseEntry >*
Response::mutable_entries() {
  return &entries_;
}

// -------------------------------------------------------------------

// ResponseEntry

// required string url = 1;
inline bool ResponseEntry::has_url() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void ResponseEntry::set_has_url() {
  _has_bits_[0] |= 0x00000001u;
}
inline void ResponseEntry::clear_has_url() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void ResponseEntry::clear_url() {
  if (url_ != &::google::protobuf::internal::kEmptyString) {
    url_->clear();
  }
  clear_has_url();
}
inline const ::std::string& ResponseEntry::url() const {
  return *url_;
}
inline void ResponseEntry::set_url(const ::std::string& value) {
  set_has_url();
  if (url_ == &::google::protobuf::internal::kEmptyString) {
    url_ = new ::std::string;
  }
  url_->assign(value);
}
inline void ResponseEntry::set_url(const char* value) {
  set_has_url();
  if (url_ == &::google::protobuf::internal::kEmptyString) {
    url_ = new ::std::string;
  }
  url_->assign(value);
}
inline void ResponseEntry::set_url(const char* value, size_t size) {
  set_has_url();
  if (url_ == &::google::protobuf::internal::kEmptyString) {
    url_ = new ::std::string;
  }
  url_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* ResponseEntry::mutable_url() {
  set_has_url();
  if (url_ == &::google::protobuf::internal::kEmptyString) {
    url_ = new ::std::string;
  }
  return url_;
}
inline ::std::string* ResponseEntry::release_url() {
  clear_has_url();
  if (url_ == &::google::protobuf::internal::kEmptyString) {
    return NULL;
  } else {
    ::std::string* temp = url_;
    url_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
    return temp;
  }
}
inline void ResponseEntry::set_allocated_url(::std::string* url) {
  if (url_ != &::google::protobuf::internal::kEmptyString) {
    delete url_;
  }
  if (url) {
    set_has_url();
    url_ = url;
  } else {
    clear_has_url();
    url_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  }
}

// required int64 size = 2;
inline bool ResponseEntry::has_size() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void ResponseEntry::set_has_size() {
  _has_bits_[0] |= 0x00000002u;
}
inline void ResponseEntry::clear_has_size() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void ResponseEntry::clear_size() {
  size_ = GOOGLE_LONGLONG(0);
  clear_has_size();
}
inline ::google::protobuf::int64 ResponseEntry::size() const {
  return size_;
}
inline void ResponseEntry::set_size(::google::protobuf::int64 value) {
  set_has_size();
  size_ = value;
}

// required bytes hash = 3;
inline bool ResponseEntry::has_hash() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void ResponseEntry::set_has_hash() {
  _has_bits_[0] |= 0x00000004u;
}
inline void ResponseEntry::clear_has_hash() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void ResponseEntry::clear_hash() {
  if (hash_ != &::google::protobuf::internal::kEmptyString) {
    hash_->clear();
  }
  clear_has_hash();
}
inline const ::std::string& ResponseEntry::hash() const {
  return *hash_;
}
inline void ResponseEntry::set_hash(const ::std::string& value) {
  set_has_hash();
  if (hash_ == &::google::protobuf::internal::kEmptyString) {
    hash_ = new ::std::string;
  }
  hash_->assign(value);
}
inline void ResponseEntry::set_hash(const char* value) {
  set_has_hash();
  if (hash_ == &::google::protobuf::internal::kEmptyString) {
    hash_ = new ::std::string;
  }
  hash_->assign(value);
}
inline void ResponseEntry::set_hash(const void* value, size_t size) {
  set_has_hash();
  if (hash_ == &::google::protobuf::internal::kEmptyString) {
    hash_ = new ::std::string;
  }
  hash_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* ResponseEntry::mutable_hash() {
  set_has_hash();
  if (hash_ == &::google::protobuf::internal::kEmptyString) {
    hash_ = new ::std::string;
  }
  return hash_;
}
inline ::std::string* ResponseEntry::release_hash() {
  clear_has_hash();
  if (hash_ == &::google::protobuf::internal::kEmptyString) {
    return NULL;
  } else {
    ::std::string* temp = hash_;
    hash_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
    return temp;
  }
}
inline void ResponseEntry::set_allocated_hash(::std::string* hash) {
  if (hash_ != &::google::protobuf::internal::kEmptyString) {
    delete hash_;
  }
  if (hash) {
    set_has_hash();
    hash_ = hash;
  } else {
    clear_has_hash();
    hash_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  }
}

// required .org.rpfl.transport.protobuf.VerificationStrength verificationStrength = 4;
inline bool ResponseEntry::has_verificationstrength() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void ResponseEntry::set_has_verificationstrength() {
  _has_bits_[0] |= 0x00000008u;
}
inline void ResponseEntry::clear_has_verificationstrength() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void ResponseEntry::clear_verificationstrength() {
  verificationstrength_ = 1;
  clear_has_verificationstrength();
}
inline ::org::rpfl::transport::protobuf::VerificationStrength ResponseEntry::verificationstrength() const {
  return static_cast< ::org::rpfl::transport::protobuf::VerificationStrength >(verificationstrength_);
}
inline void ResponseEntry::set_verificationstrength(::org::rpfl::transport::protobuf::VerificationStrength value) {
  assert(::org::rpfl::transport::protobuf::VerificationStrength_IsValid(value));
  set_has_verificationstrength();
  verificationstrength_ = value;
}


// @@protoc_insertion_point(namespace_scope)

}  // namespace protobuf
}  // namespace transport
}  // namespace rpfl
}  // namespace org

#ifndef SWIG
namespace google {
namespace protobuf {

template <>
inline const EnumDescriptor* GetEnumDescriptor< ::org::rpfl::transport::protobuf::VerificationStrength>() {
  return ::org::rpfl::transport::protobuf::VerificationStrength_descriptor();
}

}  // namespace google
}  // namespace protobuf
#endif  // SWIG

// @@protoc_insertion_point(global_scope)

#endif  // PROTOBUF_Messages_2eproto__INCLUDED
